
{-# OPTIONS --experimental-lossy-unification #-}
module Verification.Core.Data.Language.HindleyMilner.Variant.Classical.Typed.Type.CategoricalProperties where

open import Verification.Conventions hiding (โ ; _โ_ ; ฮฃ)

open import Verification.Core.Data.Language.HindleyMilner.Variant.Classical.Typed.Imports
open import Verification.Core.Data.Language.HindleyMilner.Variant.Classical.Typed.Type.Definition
open import Verification.Core.Data.Language.HindleyMilner.Helpers
open import Verification.Core.Data.Language.HindleyMilner.Type.Variant.FirstOrderTerm.Signature
open import Verification.Core.Data.Language.HindleyMilner.Variant.Classical.Typed.Signature


-- testing
-- open import Verification.Core.Category.Std.Limit.Specific.Coproduct.Variant.Binary using (reduce-ฮนโ ; reduce-ฮนโ)
-- open import Verification.Core.Category.Std.Limit.Specific.Coproduct.Reflection.Definition

-- [Hide]


--------------------------------------
-- NOTE
-- This is code copied from:
--   module Verification.Core.Category.Std.Limit.Specific.Coproduct.Properties.Monoidal where
-- It is unclear why instantiation does
-- not work here.

-------------
-- BEGIN DUPLICATE CODE

{-
open import Verification.Conventions hiding (_โ_)

byExpand-ฮนโ,ฮนโ : โ{a b c : โHMTypes} -> {f g : a โ b โถ c}
                  -> ฮนโ โ f โผ ฮนโ โ g
                  -> ฮนโ โ f โผ ฮนโ โ g
                  -> f โผ g
byExpand-ฮนโ,ฮนโ {f = f} {g} pโ pโ =
  f                   โจ expand-ฮนโ,ฮนโ โฉ-โผ
  โฆ ฮนโ โ f , ฮนโ โ f โฆ โจ โฆโ pโ , pโ โโฆ โฉ-โผ
  โฆ ฮนโ โ g , ฮนโ โ g โฆ โจ expand-ฮนโ,ฮนโ โปยน โฉ-โผ
  g                   โ

module assoc-l-โ' {a b c : โHMTypes} where

  f : (a โ b) โ c โถ a โ (b โ c)
  f = โฆ โฆ ฮนโ , ฮนโ โ ฮนโ โฆ , ฮนโ โ ฮนโ โฆ

  g : a โ (b โ c) โถ (a โ b) โ c
  g = โฆ ฮนโ โ ฮนโ , โฆ ฮนโ โ ฮนโ , ฮนโ โฆ โฆ

  abstract
    lem-1a : ฮนโ โ (ฮนโ โ (f โ g)) โผ ฮนโ โ (ฮนโ โ id)
    lem-1a = ฮนโ โ (ฮนโ โ (f โ g))   โจ refl โ assoc-r-โ โฉ-โผ
              ฮนโ โ ((ฮนโ โ f) โ g)   โจ refl โ (reduce-ฮนโ โ refl) โฉ-โผ
              ฮนโ โ (_ โ g)          โจ assoc-r-โ โฉ-โผ
              (ฮนโ โ _) โ g          โจ reduce-ฮนโ โ refl โฉ-โผ
              ฮนโ โ g                โจ reduce-ฮนโ โฉ-โผ
              ฮนโ โ ฮนโ               โจ refl โ unit-r-โ โปยน โฉ-โผ
              ฮนโ โ (ฮนโ โ id)        โ
-}
{-
  abstract
    lem-1b : ฮนโ โ (ฮนโ โ (f โ g)) โผ ฮนโ โ (ฮนโ โ id)
    lem-1b = ฮนโ โ (ฮนโ โ (f โ g))   โจ refl โ assoc-r-โ โฉ-โผ
              ฮนโ โ ((ฮนโ โ f) โ g)   โจ refl โ (reduce-ฮนโ โ refl) โฉ-โผ
              ฮนโ โ (_ โ g)          โจ assoc-r-โ โฉ-โผ
              (ฮนโ โ _) โ g          โจ reduce-ฮนโ โ refl โฉ-โผ
              (ฮนโ โ ฮนโ) โ g         โจ assoc-l-โ โฉ-โผ
              ฮนโ โ (ฮนโ โ g)         โจ refl โ reduce-ฮนโ โฉ-โผ
              ฮนโ โ _                โจ reduce-ฮนโ โฉ-โผ
              ฮนโ โ ฮนโ               โจ refl โ unit-r-โ โปยน โฉ-โผ
              ฮนโ โ (ฮนโ โ id)        โ

  abstract
    lem-1c : ฮนโ โ (f โ g) โผ ฮนโ โ id
    lem-1c = ฮนโ โ (f โ g)          โจ assoc-r-โ โฉ-โผ
              (ฮนโ โ f) โ g          โจ reduce-ฮนโ โ refl โฉ-โผ
              (ฮนโ โ ฮนโ) โ g         โจ assoc-l-โ โฉ-โผ
              ฮนโ โ (ฮนโ โ g)         โจ refl โ reduce-ฮนโ โฉ-โผ
              ฮนโ โ _                โจ reduce-ฮนโ โฉ-โผ
              ฮนโ                    โจ unit-r-โ โปยน โฉ-โผ
              ฮนโ โ id               โ

  lem-1 : f โ g โผ id
  lem-1 = byExpand-ฮนโ,ฮนโ (byExpand-ฮนโ,ฮนโ lem-1a lem-1b) lem-1c

  lem-2a : ฮนโ โ (g โ f) โผ ฮนโ โ id
  lem-2a = ฮนโ โ (g โ f)          โจ assoc-r-โ โฉ-โผ
            (ฮนโ โ g) โ f          โจ reduce-ฮนโ โ refl โฉ-โผ
            (ฮนโ โ ฮนโ) โ f         โจ assoc-l-โ โฉ-โผ
            ฮนโ โ (ฮนโ โ f)         โจ refl โ reduce-ฮนโ โฉ-โผ
            ฮนโ โ _                โจ reduce-ฮนโ โฉ-โผ
            ฮนโ                    โจ unit-r-โ โปยน โฉ-โผ
            ฮนโ โ id               โ

  lem-2b : ฮนโ โ (ฮนโ โ (g โ f)) โผ ฮนโ โ (ฮนโ โ id)
  lem-2b = ฮนโ โ (ฮนโ โ (g โ f))   โจ refl โ assoc-r-โ โฉ-โผ
            ฮนโ โ ((ฮนโ โ g) โ f)   โจ refl โ (reduce-ฮนโ โ refl) โฉ-โผ
            ฮนโ โ (_ โ f)          โจ assoc-r-โ โฉ-โผ
            (ฮนโ โ _) โ f          โจ reduce-ฮนโ โ refl โฉ-โผ
            (ฮนโ โ ฮนโ) โ f         โจ assoc-l-โ โฉ-โผ
            ฮนโ โ (ฮนโ โ f)         โจ refl โ reduce-ฮนโ โฉ-โผ
            ฮนโ โ _                โจ reduce-ฮนโ โฉ-โผ
            ฮนโ โ ฮนโ               โจ refl โ unit-r-โ โปยน โฉ-โผ
            ฮนโ โ (ฮนโ โ id)        โ

  lem-2c : ฮนโ โ (ฮนโ โ (g โ f)) โผ ฮนโ โ (ฮนโ โ id)
  lem-2c = ฮนโ โ (ฮนโ โ (g โ f))   โจ refl โ assoc-r-โ โฉ-โผ
            ฮนโ โ ((ฮนโ โ g) โ f)   โจ refl โ (reduce-ฮนโ โ refl) โฉ-โผ
            ฮนโ โ (_ โ f)          โจ assoc-r-โ โฉ-โผ
            (ฮนโ โ _) โ f          โจ reduce-ฮนโ โ refl โฉ-โผ
            ฮนโ โ f                โจ reduce-ฮนโ โฉ-โผ
            ฮนโ โ ฮนโ               โจ refl โ unit-r-โ โปยน โฉ-โผ
            ฮนโ โ (ฮนโ โ id)        โ

  lem-2 : g โ f โผ id
  lem-2 = byExpand-ฮนโ,ฮนโ lem-2a (byExpand-ฮนโ,ฮนโ lem-2b lem-2c)

  Proof : (a โ b) โ c โ a โ (b โ c)
  Proof = f since record { inverse-โ = g ; inv-r-โ = lem-1 ; inv-l-โ = lem-2 }


module ยง-assoc-l-โ' where
  prop-1 : โ{a b c : โHMTypes} -> (ฮนโ โ ฮนโ) โ โจ assoc-l-โ'.Proof {a = a} {b} {c} โฉ โผ ฮนโ
  prop-1 = (ฮนโ โ ฮนโ) โ _  โจ assoc-l-โ โฉ-โผ
            ฮนโ โ (ฮนโ โ _)  โจ refl โ reduce-ฮนโ โฉ-โผ
            ฮนโ โ _         โจ reduce-ฮนโ โฉ-โผ
            ฮนโ             โ

  prop-1' : โ{a b c : โHMTypes} -> (ฮนโ โ ฮนโ) โผ ฮนโ โ โจ assoc-l-โ'.Proof {a = a} {b} {c} โฉโปยน
  prop-1' = switch-โ-r {f = ฮนโ โ ฮนโ} {ฯ = assoc-l-โ'.Proof} {g = ฮนโ} prop-1

  prop-2 : โ{a b c x : โHMTypes}
           -> {f : a โถ x} {g : b โถ x} {h : c โถ x}
           -> โฆ f , โฆ g , h โฆ โฆ โผ โจ assoc-l-โ'.Proof โฉโปยน โ โฆ โฆ f , g โฆ , h โฆ
  prop-2 {f = f} {g} {h} = byExpand-ฮนโ,ฮนโ lem-1 (byExpand-ฮนโ,ฮนโ lem-2 lem-3)
    where
      lem-1 : ฮนโ โ โฆ f , โฆ g , h โฆ โฆ โผ ฮนโ โ (โจ assoc-l-โ'.Proof โฉโปยน โ โฆ โฆ f , g โฆ , h โฆ)
      lem-1 = ฮนโ โ โฆ f , โฆ g , h โฆ โฆ   โจ reduce-ฮนโ โฉ-โผ
              f                                                   โจ reduce-ฮนโ โปยน โฉ-โผ
              ฮนโ โ โฆ f , g โฆ                                      โจ refl โ reduce-ฮนโ โปยน โฉ-โผ
              ฮนโ โ (ฮนโ โ โฆ โฆ f , g โฆ , h โฆ)                       โจ assoc-r-โ โฉ-โผ
              (ฮนโ โ ฮนโ) โ โฆ โฆ f , g โฆ , h โฆ                       โจ reduce-ฮนโ โปยน โ refl โฉ-โผ
              (ฮนโ โ โจ assoc-l-โ'.Proof โฉโปยน) โ โฆ โฆ f , g โฆ , h โฆ   โจ assoc-l-โ โฉ-โผ
              ฮนโ โ (โจ assoc-l-โ'.Proof โฉโปยน โ โฆ โฆ f , g โฆ , h โฆ)   โ

      lem-2 : ฮนโ โ (ฮนโ โ โฆ f , โฆ g , h โฆ โฆ) โผ ฮนโ โ (ฮนโ โ (โจ assoc-l-โ'.Proof โฉโปยน โ โฆ โฆ f , g โฆ , h โฆ))
      lem-2 = ฮนโ โ (ฮนโ โ โฆ f , โฆ g , h โฆ โฆ)   โจ refl โ reduce-ฮนโ โฉ-โผ
              ฮนโ โ โฆ g , h โฆ   โจ reduce-ฮนโ โฉ-โผ
              g   โจ reduce-ฮนโ โปยน โฉ-โผ
              ฮนโ โ โฆ f , g โฆ   โจ refl โ reduce-ฮนโ โปยน โฉ-โผ
              ฮนโ โ (ฮนโ โ โฆ โฆ f , g โฆ , h โฆ)   โจ assoc-r-โ โฉ-โผ
              (ฮนโ โ ฮนโ) โ โฆ โฆ f , g โฆ , h โฆ   โจ reduce-ฮนโ โปยน โ refl โฉ-โผ
              (ฮนโ โ _) โ โฆ โฆ f , g โฆ , h โฆ   โจ assoc-l-โ โฉ-โผ
              ฮนโ โ (_ โ โฆ โฆ f , g โฆ , h โฆ)   โจ refl โ (reduce-ฮนโ โปยน โ refl) โฉ-โผ
              ฮนโ โ ((ฮนโ โ _) โ โฆ โฆ f , g โฆ , h โฆ)   โจ refl โ assoc-l-โ โฉ-โผ
              ฮนโ โ (ฮนโ โ (โจ assoc-l-โ'.Proof โฉโปยน โ โฆ โฆ f , g โฆ , h โฆ))   โ

      lem-3 : ฮนโ โ (ฮนโ โ โฆ f , โฆ g , h โฆ โฆ) โผ ฮนโ โ (ฮนโ โ (โจ assoc-l-โ'.Proof โฉโปยน โ โฆ โฆ f , g โฆ , h โฆ))
      lem-3 = ฮนโ โ (ฮนโ โ โฆ f , โฆ g , h โฆ โฆ)   โจ refl โ reduce-ฮนโ โฉ-โผ
              ฮนโ โ โฆ g , h โฆ   โจ reduce-ฮนโ โฉ-โผ
              h   โจ reduce-ฮนโ โปยน โฉ-โผ
              (ฮนโ) โ โฆ โฆ f , g โฆ , h โฆ   โจ reduce-ฮนโ โปยน โ refl โฉ-โผ
              (ฮนโ โ _) โ โฆ โฆ f , g โฆ , h โฆ   โจ assoc-l-โ โฉ-โผ
              ฮนโ โ (_ โ โฆ โฆ f , g โฆ , h โฆ)   โจ refl โ (reduce-ฮนโ โปยน โ refl) โฉ-โผ
              ฮนโ โ ((ฮนโ โ _) โ โฆ โฆ f , g โฆ , h โฆ)   โจ refl โ assoc-l-โ โฉ-โผ
              ฮนโ โ (ฮนโ โ (โจ assoc-l-โ'.Proof โฉโปยน โ โฆ โฆ f , g โฆ , h โฆ))   โ

-}

open import Verification.Core.Category.Std.Limit.Specific.Coproduct.Properties.Monoidal



module _ {๐ฏ : ๐ฐ ๐} {{_ : isโHMTypeCtx {๐} ๐ฏ}} where

  private
    ฮฃ : โHMSignature _
    ฮฃ = โฒ ๐ฏ โฒ

  assoc-l-โ-โHMTypes : โ{a b c : โHMTypes ฮฃ} -> (a โ b) โ c โ a โ (b โ c)
  assoc-l-โ-โHMTypes {a} {b} {c} = assoc-l-โ

-- END DUPLICATE CODE
-------------

---------------------------
-- other categorical proofs

  module ยง-โHMTypes where
    prop-1 : โ{a b : โHMTypes ฮฃ} -> id {a = a โ b} โผ โฆ ฮนโ , ฮนโ โฆ
    prop-1 {a} {b} = {!!}
      -- id {a = a โ b}                    โจ expand-ฮนโ,ฮนโ โฉ-โผ
      -- โฆ ฮนโ โ id , ฮนโ โ id โฆ โจ โฆโ unit-r-โ , unit-r-โ โโฆ โฉ-โผ
      -- โฆ ฮนโ , ฮนโ โฆ           โ



-- //
